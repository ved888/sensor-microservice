// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/frequency": {
            "post": {
                "description": "Change how often sensor data is generated.The ` + "`" + `freq` + "`" + ` parameter supports two formats:-- 1. **Milliseconds as integer** (e.g., ` + "`" + `1000` + "`" + ` = 1 second), 2. **Go duration string** (e.g., ` + "`" + `1s` + "`" + `, ` + "`" + `500ms` + "`" + `, ` + "`" + `2m` + "`" + `) Example usages:- ` + "`" + `POST /frequency?freq=1000` + "`" + ` → Updates frequency to 1 second, - ` + "`" + `POST /frequency?freq=500ms` + "`" + ` → Updates frequency to 500 milliseconds",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MicroserviceA"
                ],
                "summary": "Update sensor data generation frequency",
                "parameters": [
                    {
                        "type": "string",
                        "description": "New frequency for sensor data generation (milliseconds or duration string)",
                        "name": "freq",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Frequency successfully updated",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid or missing frequency",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "sensor-microservice-a",
	Description:      "This is the API documentation for Microservice A (Data Generator)",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
